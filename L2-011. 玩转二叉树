#include<cstdio>  
#include<cstring>  
#include<algorithm>  
#include<queue>  
using namespace std;  
int *pre,*in,n;  
int *ans;  
int cnt;  
struct Node{  
    int v;  
    Node* left,*right;  
}*root;  
queue<Node*>q;  
int cnt2 = 0;  
Node *build(int *pre,int *in,int len){  
    if (len == 0)return NULL;  
    Node * node = new Node;  
    node->v = *pre;  
    ++cnt2;  
    if (cnt2==1)root = node;  
    int rootdex = 0;  
    for (; rootdex < n; ++rootdex)if (in[rootdex] == *pre)break;  
    node->left = build(pre+1,in,rootdex);  
    node->right = build(pre+1+rootdex,in+rootdex+1,len-rootdex-1);  
    return node;  
}  
void print(){  
    while(!q.empty())q.pop();  
    q.push(root);  
    while(!q.empty()){  
        Node *u = q.front();q.pop();  
        ans[cnt++] = u->v;  
        if (u->right != NULL)q.push(u->right);  
        if (u->left != NULL)q.push(u->left);  
  
    }  
    for (int i = 0; i < cnt; ++i){  
        if (i)printf(" ");  
        printf("%d",ans[i]);  
    }  
}  
int main(){  
    scanf("%d",&n);  
    pre = new int[n];  
    in = new int[n];  
    ans = new int[n];  
    cnt = 0;  
    for (int i = 0; i < n; ++i)scanf("%d",&in[i]);  
    for (int i = 0; i < n; ++i)scanf("%d",&pre[i]);  
    build(pre,in,n);  
    print();  
    return 0;  
}  
